[{"C:\\Users\\anauer\\Documents\\accessability-mouseshaking-simulation\\mouse-simulation\\src\\index.tsx":"1","C:\\Users\\anauer\\Documents\\accessability-mouseshaking-simulation\\mouse-simulation\\src\\reportWebVitals.ts":"2","C:\\Users\\anauer\\Documents\\accessability-mouseshaking-simulation\\mouse-simulation\\src\\App.tsx":"3","C:\\Users\\anauer\\Documents\\accessability-mouseshaking-simulation\\mouse-simulation\\src\\components\\Attendees.tsx":"4","C:\\Users\\anauer\\Documents\\accessability-mouseshaking-simulation\\mouse-simulation\\src\\components\\NewAttendeeForm.tsx":"5","C:\\Users\\anauer\\Documents\\accessability-mouseshaking-simulation\\mouse-simulation\\src\\components\\AttendeeHook.tsx":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":425,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":835,"mtime":1611153947217,"results":"10","hashOfConfig":"8"},{"size":2860,"mtime":1611153357303,"results":"11","hashOfConfig":"8"},{"size":4141,"mtime":1611069176302,"results":"12","hashOfConfig":"8"},{"size":562,"mtime":1611062003606,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"cpxwrj",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"C:\\Users\\anauer\\Documents\\accessability-mouseshaking-simulation\\mouse-simulation\\src\\index.tsx",[],["29","30"],"C:\\Users\\anauer\\Documents\\accessability-mouseshaking-simulation\\mouse-simulation\\src\\reportWebVitals.ts",[],"C:\\Users\\anauer\\Documents\\accessability-mouseshaking-simulation\\mouse-simulation\\src\\App.tsx",["31"],"C:\\Users\\anauer\\Documents\\accessability-mouseshaking-simulation\\mouse-simulation\\src\\components\\Attendees.tsx",["32"],"C:\\Users\\anauer\\Documents\\accessability-mouseshaking-simulation\\mouse-simulation\\src\\components\\NewAttendeeForm.tsx",["33","34"],"import React, { FC, FormEvent, useCallback, useEffect, useState } from \"react\"\r\nimport { Attendee } from \"./Attendees\"\r\nconst { v4: uuidv4 } = require('uuid');\r\n\r\ninterface iNewAttendeeForm {\r\n    attendees: Attendee[],\r\n    setAttendees: (attendees: Attendee[]) => void,\r\n    setFormState: (val: boolean) => void\r\n}\r\n\r\nexport const NewAttendeeForm:FC<iNewAttendeeForm> = ({attendees, setAttendees, setFormState}) => {\r\n    const [currentAttendee, setCurrentAttendee] = useState<Attendee>({\r\n        id: uuidv4(),\r\n        surname: '',\r\n        name: '',\r\n        street_number: '',\r\n        zipcode: '',\r\n        city: ''\r\n    })\r\n\r\n    const cancelInput = (e: FormEvent) => {\r\n        e.preventDefault()\r\n        setCurrentAttendee({\r\n            id: uuidv4(),\r\n            surname: '',\r\n            name: '',\r\n            street_number: '',\r\n            zipcode: '',\r\n            city: ''\r\n        })\r\n        setFormState(false)\r\n    }\r\n\r\n    const saveAttendee = (e: FormEvent) => {\r\n        e.preventDefault()\r\n        console.log(currentAttendee)\r\n        setAttendees([...attendees, currentAttendee])\r\n        setCurrentAttendee({\r\n            id: uuidv4(),\r\n            surname: '',\r\n            name: '',\r\n            street_number: '',\r\n            zipcode: '',\r\n            city: ''\r\n        })\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={(e) => e.preventDefault()}>\r\n            <label htmlFor=\"surname\" typeof=\"text\">Surname: <br/>\r\n            <input type=\"text\" value={currentAttendee.surname} onChange={(e) => setCurrentAttendee({\r\n                id: currentAttendee.id,\r\n                surname: e.target.value,\r\n                name: currentAttendee.name,\r\n                street_number: currentAttendee.street_number,\r\n                zipcode: currentAttendee.zipcode,\r\n                city: currentAttendee.city\r\n            })}/>\r\n            </label> <br/>\r\n            <label htmlFor=\"name\" typeof=\"text\">Name: <br/>\r\n            <input type=\"text\" value={currentAttendee.name} onChange={(e) => setCurrentAttendee({\r\n                id: currentAttendee.id,\r\n                surname: currentAttendee.surname,\r\n                name: e.target.value,\r\n                street_number: currentAttendee.street_number,\r\n                zipcode: currentAttendee.zipcode,\r\n                city: currentAttendee.city\r\n            })}/> \r\n            </label> <br/>\r\n            <label htmlFor=\"street-number\" typeof=\"text\">Street and house number: <br/>\r\n            <input type=\"text\" value={currentAttendee.street_number} onChange={(e) => setCurrentAttendee({\r\n                id: currentAttendee.id,\r\n                surname: currentAttendee.surname,\r\n                name: currentAttendee.name,\r\n                street_number: e.target.value,\r\n                zipcode: currentAttendee.zipcode,\r\n                city: currentAttendee.city\r\n            })}/>\r\n            </label> <br/>\r\n            <label htmlFor=\"zipcode\" typeof=\"text\">Zipcode: <br/>\r\n            <input type=\"number\" value={currentAttendee.zipcode} onChange={(e) => setCurrentAttendee({\r\n                id: currentAttendee.id,\r\n                surname: currentAttendee.surname,\r\n                name: currentAttendee.name,\r\n                street_number: currentAttendee.street_number,\r\n                zipcode: e.target.value.toString(),\r\n                city: currentAttendee.city\r\n            })}/>\r\n            </label> <br/>\r\n            <label htmlFor=\"city\" typeof=\"text\">City: <br/>\r\n            <input type=\"text\" value={currentAttendee.city} onChange={(e) => setCurrentAttendee({\r\n                id: currentAttendee.id,\r\n                surname: currentAttendee.surname,\r\n                name: currentAttendee.name,\r\n                street_number: currentAttendee.street_number,\r\n                zipcode: currentAttendee.zipcode,\r\n                city: e.target.value\r\n            })}/>\r\n            </label>\r\n            <br/>\r\n            <input type=\"button\" value=\"Cancel\" onClick={cancelInput} className=\"formBtn\"/>\r\n            <input type=\"button\" value=\"Save\" onClick={saveAttendee} className=\"formBtn\"/>\r\n        </form>\r\n    )\r\n}","C:\\Users\\anauer\\Documents\\accessability-mouseshaking-simulation\\mouse-simulation\\src\\components\\AttendeeHook.tsx",["35"],"import { useEffect, useState } from \"react\"\r\nimport { Attendee } from \"./Attendees\"\r\n\r\ntype AttendeeHookResponse = {\r\n    attendees: Attendee[],\r\n    setAttendees: React.Dispatch<React.SetStateAction<Attendee[]>>,\r\n    showForm: boolean,\r\n    setFormState: React.Dispatch<React.SetStateAction<boolean>>\r\n}\r\n\r\nexport const useAttendees = (() : AttendeeHookResponse => {\r\n    const[attendees, setAttendees] = useState<Attendee[]>([])\r\n    const [showForm, setFormState] = useState<boolean>(false)\r\n\r\n    return {attendees, setAttendees, showForm, setFormState}\r\n})",{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":19,"column":11,"nodeType":"42","messageId":"43","endLine":19,"endColumn":19},{"ruleId":"40","severity":1,"message":"44","line":1,"column":28,"nodeType":"42","messageId":"43","endLine":1,"endColumn":37},{"ruleId":"40","severity":1,"message":"45","line":1,"column":32,"nodeType":"42","messageId":"43","endLine":1,"endColumn":43},{"ruleId":"40","severity":1,"message":"44","line":1,"column":45,"nodeType":"42","messageId":"43","endLine":1,"endColumn":54},{"ruleId":"40","severity":1,"message":"44","line":1,"column":10,"nodeType":"42","messageId":"43","endLine":1,"endColumn":19},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"@typescript-eslint/no-unused-vars","'interval' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useCallback' is defined but never used.","no-global-assign","no-unsafe-negation"]